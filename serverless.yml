service: ${file(./serverless/serverless.${env:STACK_NAME}.yml):serviceName}

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    SQS_QUEUE_URL:
      Ref: SQSQueue
  iamRoleStatements:  # Permissões de envio e recebimento para o Lambda
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource:
        - arn:aws:sqs:${self:provider.region}:*:${self:resources.Resources.SQSQueue.Properties.QueueName}

functions:
  sendMessage:  # Função produtora
    name: ${env:STACK_NAME}-transaction-producer
    handler: build/handler.sendMessage
    events:
      - http:
          path: send-message
          method: post
          cors: true
          integration: lambda # Integração com Lambda (padrão)
          request:
            schemas:
              application/json:
                schema: {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "parcela_cod": {
                      "type": "string",
                      "minLength": 1
                    },
                    "nsu": {
                      "type": "string",
                      "minLength": 1
                    },
                    "valor": {
                      "type": "number",
                      "minimum": 0
                    },
                    "mdr": {
                      "type": "number",
                      "minimum": 0
                    },
                    "modalidade": {
                      "type": "string",
                      "enum": ["Crédito", "Débito", "Pix", "Boleto"]
                    },
                    "bandeira": {"type": "string"},
                    "data_vencimento": {"type": "string"},
                    "adquirente": {"type": "string"},
                    
                  },
                  "required": ["external_id", "nsu", "valor", "modalidade", "bandeira"],
                  "additionalProperties": false
                } 
                name: TransactionRegister
                description: 'Valida as informações da transação'

  consumeMessage:  # Função consumidora
    name: ${env:STACK_NAME}-transaction-consumer
    handler: build/consumer.consumeMessage
    environment:
      DATABASE_URL: ${ssm:/bffidic/api/hml/database-url}    
    vpc:
        securityGroupIds:
            - sg-07d7f4cad2ee323b7
        subnetIds:
            - subnet-09503b996aac18eb8
            - subnet-0fce94dad57e60c79

    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:STACK_NAME}-transaction

  Outputs:
    SQSQueueUrl:
      Value:
        Ref: SQSQueue
      Export:
        Name: ${env:STACK_NAME}-SQSQueueUrl

package:
    include:
        - models/transaction-schema.json
        - build/**
    patterns:
        - "!node_modules/.prisma/client/libquery_engine-*"
        - "node_modules/.prisma/client/libquery_engine-rhel-*"
        - "!node_modules/prisma/libquery_engine-*"
        - "!node_modules/@prisma/engines/**"
