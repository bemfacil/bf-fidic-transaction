// schema.prisma

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["fidic"]
}


model Arrangement {
  id                     String         @id @default(uuid()) @db.Uuid
  flag                   String         @db.VarChar(50)
  modality               String         @db.VarChar(32)
  payment_date           DateTime
  maturity_date          DateTime
  create_date            DateTime
  update_date            DateTime
  ShippingArrangement    ShippingArrangement[]

  @@unique([flag, modality, maturity_date], name: "arrangement_group")
  @@schema("fidic")
}

model ShippingArrangement {
  id             String             @id @default(uuid()) @db.Uuid
  arrangement    Arrangement            @relation(fields: [arrangement_id], references: [id])
  arrangement_id String             @db.Uuid
  external_id    String?            @unique @db.VarChar(64)
  amount         Int
  amount_sent    Int?
  status         ArrangementStatusEnum? @default(CREATED)
  create_date    DateTime
  update_date    DateTime
  Transaction    FidicTransaction[]
  Validation     ValidationArrangement[]

  @@schema("fidic")
}

enum ArrangementStatusEnum {
  CALCULATED
  CREATED
  SENT
  CONFIRMED
  INVALID
  PREVALIDATED
  VALIDATED
  INCORRECT

  @@schema("fidic")
}

model ValidationArrangement {
  id                      String              @id @default(uuid()) @db.Uuid
  payload                 Json
  status                  String?
  create_date             DateTime
  update_date             DateTime
  ShippingArrangement     ShippingArrangement @relation(fields: [shipping_arrangement_id], references: [id])
  shipping_arrangement_id String              @db.Uuid

  @@schema("fidic")
}

model FidicTransaction {
  id                      String        @id @default(uuid()) @db.Uuid
  external_id             String        @db.VarChar(32)
  installment_cod         String        @db.VarChar(32)
  nsu                     String        @db.VarChar(20)
  amount                  Int
  mdr                     Int
  modality                String        @db.VarChar(32)
  flag                    String        @db.VarChar(32)
  acquirer                String        @db.VarChar(32)
  maturity_date           DateTime      @db.Date
  transaction_date        DateTime      @db.Date
  create_date             DateTime
  update_date             DateTime
  ShippingArrangement     ShippingArrangement? @relation(fields: [shipping_arrangement_id], references: [id])
  shipping_arrangement_id String?       @db.Uuid

  @@unique([external_id, installment_cod, nsu], name: "fidic_transaction_id")
  @@schema("fidic")
}
